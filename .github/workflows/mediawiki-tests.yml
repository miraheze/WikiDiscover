name: MediaWiki tests

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: "${{ matrix.mw }} | ${{ matrix.repo }} | PHP ${{ matrix.php }}"
    continue-on-error: true
    strategy:
      matrix:
        include:
          # Miraheze version - PHP 7.3
          - mw: 'REL1_36'
            repo: 'miraheze'
            php: 7.3
            composer: v2
            continue-on-error: false

          # Miraheze version - PHP 7.4
          - mw: 'REL1_36'
            repo: 'miraheze'
            php: 7.4
            composer: v2
            continue-on-error: true

          # Latest stable MediaWiki
          - mw: 'REL1_36'
            repo: 'wikimedia'
            php: 7.3
            composer: v2
            continue-on-error: false

          # Latest MediaWiki master
          - mw: 'master'
            repo: 'wikimedia'
            php: 7.3
            composer: v2
            continue-on-error: true

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl,ast
          tools: composer:${{ matrix.composer }}

      - name: Install dependencies
        run: |
          composer validate
          composer update
          npm install --save-dev

      - name: Check PHP
        if: ${{ matrix.mw == 'master' }}
        run: |
          sh phpcbf.sh
          composer fix
          composer test

      - name: Check i18n
        if: ${{ matrix.mw == 'master' }}
        run: |
          npm run lint:i18n

      - name: Cache MediaWiki
        id: cache-mediawiki
        uses: actions/cache@v2
        with:
          path: |
            mediawiki
            !mediawiki/extensions/
            !mediawiki/vendor/
          key: mw-${{ matrix.mw }}-${{ matrix.repo }}-php${{ matrix.php }}-v2

      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-php${{ matrix.php }}

      - name: Download MediaWiki
        if: steps.cache-mediawiki.outputs.cache-hit != 'true'
        run: bash .github/workflows/download-mediawiki.sh ${{ matrix.mw }} ${{ matrix.repo }}

      - name: Clone extension dependencies
        if: ${{ matrix.repo != 'miraheze' }}
        run: |
          rm -rf mediawiki/extensions/*
          git clone https://github.com/wikimedia/mediawiki-extensions-CentralAuth.git --depth=1 --branch=${{ matrix.mw }} mediawiki/extensions/CentralAuth
          git clone https://github.com/wikimedia/mediawiki-extensions-BlogPage.git --depth=1 mediawiki/extensions/BlogPage
          git clone https://github.com/wikimedia/mediawiki-extensions-SocialProfile.git --depth=1 mediawiki/extensions/SocialProfile
          git clone https://github.com/Universal-Omega/SimpleBlogPage.git --depth=1 mediawiki/extensions/SimpleBlogPage

      - name: Checkout extension dependencies
        if: ${{ matrix.repo == 'miraheze' }}
        run: |
          cd mediawiki
          rm -rf extensions/*
          git submodule update --init extensions/CentralAuth
          git submodule update --init extensions/BlogPage
          git submodule update --init extensions/SimpleBlogPage
          git submodule update --init extensions/SocialProfile

      - name: Run phan
        continue-on-error: ${{ matrix.continue-on-error }}
        run: |
          composer phan

      # Only patch code when it is a push event
      - name: Push the changes
        if: github.event_name == 'push' && matrix.mw == 'master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git add .
          git commit -am "CI: lint code to MediaWiki standards" -m "Check commit and GitHub actions for more details" || echo "No changes to commit"
          git pull --rebase
          git push

  notify-irc:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() && github.repository_owner == 'miraheze' && ( github.ref == 'refs/heads/master' || github.event_name == 'pull_request' ) }}
    steps:
      - name: succeeded
        uses: technote-space/workflow-conclusion-action@v2
      - uses: rectalogic/notify-irc@v1
        if: env.WORKFLOW_CONCLUSION == 'success'
        with:
          channel: "#miraheze-sre"
          server: "irc.libera.chat"
          nickname: miraheze-github
          message: ${{ github.repository }} - ${{ github.actor }} the build passed.
          sasl_password: ${{ secrets.IRC_MIRAHEZEBOTS }}

      - name: failed
        uses: technote-space/workflow-conclusion-action@v2
      - uses: rectalogic/notify-irc@v1
        if: env.WORKFLOW_CONCLUSION == 'failure'
        with:
          channel: "#miraheze-sre"
          server: "irc.libera.chat"
          nickname: miraheze-github
          message: ${{ github.repository }} - ${{ github.actor }} the build has errored.
          sasl_password: ${{ secrets.IRC_MIRAHEZEBOTS }}

      - name: cancelled
        uses: technote-space/workflow-conclusion-action@v2
      - uses: rectalogic/notify-irc@v1
        if: env.WORKFLOW_CONCLUSION == 'cancelled'
        with:
          channel: "#miraheze-sre"
          server: "irc.libera.chat"
          nickname: miraheze-github
          message: ${{ github.repository }} - ${{ github.actor }} the build has been cancelled.
          sasl_password: ${{ secrets.IRC_MIRAHEZEBOTS }}
